{
  "esformatter": {
    "allowShebang": true
  },

  "indent" : {
    "value": "    ",
    "alignComments": true,

    "ArrayExpression": 1,
    "ArrayPattern": 1,
    "ArrowFunctionExpression": 1,
    "AssignmentExpression": 1,
    "AssignmentExpression.BinaryExpression": 1,
    "AssignmentExpression.LogicalExpression": 1,
    "AssignmentExpression.UnaryExpression": 1,
    "BlockStatement": 1,
    "CallExpression": 1,
    "CallExpression.BinaryExpression": 1,
    "CallExpression.LogicalExpression": 1,
    "CallExpression.UnaryExpression": 1,
    "CatchClause": 1,
    "ConditionalExpression": 1,
    "CommentInsideEmptyBlock": 1,
    "ClassDeclaration": 1,
    "ClassExpression": 1,
    "DoWhileStatement": 1,
    "ForInStatement": 1,
    "ForOfStatement": 1,
    "ForStatement": 1,
    "FunctionDeclaration": 1,
    "FunctionExpression": 1,
    "IfStatement": 1,
    "MemberExpression": 1,
    "MultipleVariableDeclaration": 1,
    "NewExpression": 1,
    "ObjectExpression": 1,
    "ObjectExpression.BinaryExpression": 1,
    "ObjectExpression.LogicalExpression": 1,
    "ObjectExpression.UnaryExpression": 1,
    "ObjectPattern": 1,
    "ParameterList": 1,
    "ReturnStatement": 1,
    "SingleVariableDeclaration": 0,
    "SwitchCase": 1,
    "SwitchStatement": 1,
    "TopLevelFunctionBlock": 1,
    "TryStatement": 1,
    "VariableDeclaration.BinaryExpression": 1,
    "VariableDeclaration.LogicalExpression": 1,
    "VariableDeclaration.UnaryExpression": 1,
    "WhileStatement": 1
  },

  "lineBreak" : {
    "value" : "\n",

    "before" : {
      "AssignmentExpression" : -1,
      "AssignmentOperator": -1,
      "AssignmentPattern" : -1,
      "ArrayPatternOpening": -1,
      "ArrayPatternClosing": -1,
      "ArrayPatternComma": -1,
      "ArrowFunctionExpressionArrow": -1,
      "ArrowFunctionExpressionOpeningBrace": -1,
      "ArrowFunctionExpressionClosingBrace": 1,
      "BlockStatementClosingBrace" : -1,
      "BlockStatementOpeningBrace" : -1,
      "BreakKeyword": -1,
      "CallExpression" : -1,
      "CallExpressionOpeningParentheses" : -1,
      "CallExpressionClosingParentheses" : -1,
      "ClassDeclaration" : -1,
      "ClassExpression" : -1,
      "ClassOpeningBrace" : -1,
      "ClassClosingBrace" : -1,
      "ConditionalExpression" : -1,
      "CatchOpeningBrace" : -1,
      "CatchClosingBrace" : -1,
      "CatchKeyword": -1,
      "DeleteOperator" : -1,
      "DoWhileStatement" : -1,
      "DoWhileStatementOpeningBrace" : -1,
      "DoWhileStatementClosingBrace" : -1,
      "EndOfFile" : 1,
      "EmptyStatement" : -1,
      "ExportAllDeclaration": -1,
      "ExportDefaultDeclaration": -1,
      "ExportNamedDeclaration": -1,
      "FinallyKeyword" : -1,
      "FinallyOpeningBrace" : -1,
      "FinallyClosingBrace" : -1,
      "ForInStatement" : -1,
      "ForInStatementExpressionOpening" : -1,
      "ForInStatementExpressionClosing" : -1,
      "ForInStatementOpeningBrace" : -1,
      "ForInStatementClosingBrace" : -1,
      "ForOfStatement" : -1,
      "ForOfStatementExpressionOpening" : -1,
      "ForOfStatementExpressionClosing" : -1,
      "ForOfStatementOpeningBrace" : -1,
      "ForOfStatementClosingBrace" : -1,
      "ForStatement" : -1,
      "ForStatementExpressionOpening" : -1,
      "ForStatementExpressionClosing" : -1,
      "ForStatementOpeningBrace" : -1,
      "ForStatementClosingBrace" : -1,
      "FunctionExpression" : -1,
      "FunctionExpressionOpeningBrace" : -1,
      "FunctionExpressionClosingBrace" : 1,
      "FunctionDeclaration" : -1,
      "FunctionDeclarationOpeningBrace" : -1,
      "FunctionDeclarationClosingBrace" : -1,
      "IIFEClosingParentheses" : -1,
      "IfStatement" : -1,
      "IfStatementOpeningBrace" : 0,
      "IfStatementClosingBrace" : 1,
      "ElseIfStatement" : 1,
      "ElseIfStatementOpeningBrace" : 0,
      "ElseIfStatementClosingBrace" : 1,
      "ElseStatement" : 1,
      "ElseStatementOpeningBrace" : 0,
      "ElseStatementClosingBrace" : 1,
      "LogicalExpression" : -1,
      "MethodDefinition": -1,
      "MemberExpressionOpening": -1,
      "MemberExpressionClosing": -1,
      "MemberExpressionPeriod": -1,
      "ObjectExpressionClosingBrace" : -1,
      "ObjectPatternOpeningBrace": -1,
      "ObjectPatternClosingBrace": -1,
      "ObjectPatternComma": -1,
      "Property" : -1,
      "PropertyValue" : -1,
      "ReturnStatement" : -1,
      "SwitchOpeningBrace" : -1,
      "SwitchClosingBrace" : -1,
      "SwitchCaseBlockEnd": -1,
      "SwitchCaseBlockStart": -1,
      "SwitchCaseColon": -1,
      "ThisExpression" : -1,
      "ThrowStatement" : -1,
      "TryKeyword": -1,
      "TryOpeningBrace" : -1,
      "TryClosingBrace" : -1,
      "VariableName" : -1,
      "VariableValue" : -1,
      "VariableDeclaration" : -1,
      "VariableDeclarationSemiColon" : -1,
      "VariableDeclarationWithoutInit" : -1,
      "WhileStatement" : -1,
      "WhileStatementOpeningBrace" : -1,
      "WhileStatementClosingBrace" : -1
    },

    "after" : {
      "AssignmentExpression" : -1,
      "AssignmentOperator" : -1,
      "AssignmentPattern" : -1,
      "ArrayPatternOpening": -1,
      "ArrayPatternClosing": -1,
      "ArrayPatternComma": -1,
      "ArrowFunctionExpressionArrow": -1,
      "ArrowFunctionExpressionOpeningBrace": 1,
      "ArrowFunctionExpressionClosingBrace": -1,
      "BlockStatementClosingBrace" : -1,
      "BlockStatementOpeningBrace" : -1,
      "BreakKeyword": -1,
      "CallExpression" : -1,
      "CallExpressionOpeningParentheses" : -1,
      "CallExpressionClosingParentheses" : -1,
      "ClassDeclaration" : -1,
      "ClassExpression" : -1,
      "ClassOpeningBrace" : -1,
      "ClassClosingBrace" : -1,
      "CatchOpeningBrace" : -1,
      "CatchClosingBrace" : -1,
      "CatchKeyword": -1,
      "ConditionalExpression" : -1,
      "DeleteOperator" : -1,
      "DoWhileStatement" : -1,
      "DoWhileStatementOpeningBrace" : -1,
      "DoWhileStatementClosingBrace" : -1,
      "EmptyStatement" : -1,
      "FinallyKeyword" : -1,
      "FinallyOpeningBrace" : -1,
      "FinallyClosingBrace" : -1,
      "ForInStatement" : -1,
      "ForInStatementExpressionOpening" : -1,
      "ForInStatementExpressionClosing" : -1,
      "ForInStatementOpeningBrace" : -1,
      "ForInStatementClosingBrace" : -1,
      "ForOfStatement" : -1,
      "ForOfStatementExpressionOpening" : -1,
      "ForOfStatementExpressionClosing" : -1,
      "ForOfStatementOpeningBrace" : -1,
      "ForOfStatementClosingBrace" : -1,
      "ForStatement" : -1,
      "ForStatementExpressionOpening" : -1,
      "ForStatementExpressionClosing" : -1,
      "ForStatementOpeningBrace" : -1,
      "ForStatementClosingBrace" : -1,
      "FunctionExpression" : -1,
      "FunctionExpressionOpeningBrace" : 1,
      "FunctionExpressionClosingBrace" : -1,
      "FunctionDeclaration" : -1,
      "FunctionDeclarationOpeningBrace" : -1,
      "FunctionDeclarationClosingBrace" : -1,
      "IIFEOpeningParentheses" : -1,
      "IfStatement" : ">=1",
      "IfStatementOpeningBrace" : 1,
      "IfStatementClosingBrace" : -1,
      "ElseIfStatement" : ">=1",
      "ElseIfStatementOpeningBrace" : 1,
      "ElseIfStatementClosingBrace" : -1,
      "ElseStatement" : ">=1",
      "ElseStatementOpeningBrace" : 1,
      "ElseStatementClosingBrace" : -1,
      "LogicalExpression" : -1,
      "MethodDefinition": -1,
      "MemberExpressionOpening": -1,
      "MemberExpressionClosing": -1,
      "MemberExpressionPeriod": -1,
      "ObjectExpressionOpeningBrace" : -1,
      "ObjectPatternOpeningBrace": -1,
      "ObjectPatternClosingBrace": -1,
      "ObjectPatternComma": -1,
      "Property" : -1,
      "PropertyName" : -1,
      "ReturnStatement" : -1,
      "SwitchOpeningBrace" : -1,
      "SwitchClosingBrace" : -1,
      "SwitchCaseBlockEnd": -1,
      "SwitchCaseBlockStart": -1,
      "SwitchCaseColon": -1,
      "ThisExpression" : -1,
      "ThrowStatement" : -1,
      "TryKeyword": -1,
      "TryOpeningBrace" : -1,
      "TryClosingBrace" : -1,
      "VariableValue" : -1,
      "VariableDeclaration" : -1,
      "VariableDeclarationSemiColon" : -1,
      "WhileStatement" : -1,
      "WhileStatementOpeningBrace" : -1,
      "WhileStatementClosingBrace" : -1
    }
  },

  "whiteSpace" : {
    "value" : " ",
    "removeTrailing" : 1,

    "before" : {
      "AssignmentPattern" : -1,
      "ArrayExpressionOpening" : -1,
      "ArrayExpressionClosing" : -1,
      "ArrayExpressionComma" : -1,
      "ArrayPatternOpening": -1,
      "ArrayPatternClosing": -1,
      "ArrayPatternComma": -1,
      "ArrowFunctionExpressionArrow": -1,
      "ArrowFunctionExpressionOpeningBrace": -1,
      "ArrowFunctionExpressionClosingBrace": -1,
      "ArgumentComma" : -1,
      "ArgumentList" : -1,
      "AssignmentOperator" : -1,
      "BinaryExpression": -1,
      "BinaryExpressionOperator" : -1,
      "BlockComment" : -1,
      "BlockStatementClosingBrace" : -1,
      "BlockStatementOpeningBrace" : -1,
      "CallExpression" : -1,
      "CallExpressionOpeningParentheses" : -1,
      "CallExpressionClosingParentheses" : -1,
      "CatchParameterList" : -1,
      "CatchOpeningBrace" : -1,
      "CatchClosingBrace" : -1,
      "CatchKeyword" : -1,
      "CommaOperator" : -1,
      "ClassOpeningBrace" : -1,
      "ClassClosingBrace" : -1,
      "ConditionalExpressionConsequent" : -1,
      "ConditionalExpressionAlternate" : -1,
      "DoWhileStatementOpeningBrace" : -1,
      "DoWhileStatementClosingBrace" : -1,
      "DoWhileStatementConditional" : -1,
      "EmptyStatement" : -1,
      "ExpressionClosingParentheses" : 0,
      "FinallyKeyword" : -1,
      "FinallyOpeningBrace" : -1,
      "FinallyClosingBrace" : -1,
      "ForInStatement" : -1,
      "ForInStatementExpressionOpening" : 1,
      "ForInStatementExpressionClosing" : -1,
      "ForInStatementOpeningBrace" : -1,
      "ForInStatementClosingBrace" : -1,
      "ForOfStatement" : -1,
      "ForOfStatementExpressionOpening" : 1,
      "ForOfStatementExpressionClosing" : -1,
      "ForOfStatementOpeningBrace" : -1,
      "ForOfStatementClosingBrace" : -1,
      "ForStatement" : -1,
      "ForStatementExpressionOpening" : 1,
      "ForStatementExpressionClosing" : -1,
      "ForStatementOpeningBrace" : -1,
      "ForStatementClosingBrace" : -1,
      "ForStatementSemicolon" : -1,
      "FunctionDeclarationOpeningBrace" : -1,
      "FunctionDeclarationClosingBrace" : -1,
      "FunctionExpressionOpeningBrace" : -1,
      "FunctionExpressionClosingBrace" : -1,
      "FunctionGeneratorAsterisk": -1,
      "FunctionName" : -1,
      "IIFEClosingParentheses" : -1,
      "IfStatementConditionalOpening" : 1,
      "IfStatementConditionalClosing" : -1,
      "IfStatementOpeningBrace" : -1,
      "IfStatementClosingBrace" : -1,
      "ModuleSpecifierClosingBrace": -1,
      "ElseStatementOpeningBrace" : -1,
      "ElseStatementClosingBrace" : -1,
      "ElseIfStatementOpeningBrace" : -1,
      "ElseIfStatementClosingBrace" : -1,
      "LineComment" : -1,
      "LogicalExpressionOperator" : -1,
      "MemberExpressionOpening": -1,
      "MemberExpressionClosing": -1,
      "MemberExpressionPeriod": -1,
      "ObjectExpressionOpeningBrace": -1,
      "ObjectExpressionClosingBrace": 1,
      "ObjectPatternOpeningBrace": -1,
      "ObjectPatternClosingBrace": 1,
      "ObjectPatternComma": -1,
      "Property" : -1,
      "PropertyValue" : -1,
      "ParameterComma" : -1,
      "ParameterList" : -1,
      "SwitchDiscriminantOpening" : -1,
      "SwitchDiscriminantClosing" : -1,
      "SwitchCaseBlockEnd": -1,
      "SwitchCaseBlockStart": 1,
      "SwitchCaseColon": 0,
      "ThrowKeyword": -1,
      "TryKeyword": -1,
      "TryOpeningBrace" : -1,
      "TryClosingBrace" : -1,
      "UnaryExpressionOperator": -1,
      "UpdateExpressionOperator": -1,
      "VariableName" : -1,
      "VariableValue" : -1,
      "VariableDeclarationSemiColon" : -1,
      "WhileStatementConditionalOpening" : -1,
      "WhileStatementConditionalClosing" : -1,
      "WhileStatementOpeningBrace" : -1,
      "WhileStatementClosingBrace" : -1
    },

    "after" : {
      "AssignmentPattern" : -1,
      "ArrayExpressionOpening" : -1,
      "ArrayExpressionClosing" : -1,
      "ArrayExpressionComma" : -1,
      "ArrayPatternOpening": -1,
      "ArrayPatternClosing": -1,
      "ArrayPatternComma": -1,
      "ArrowFunctionExpressionArrow": -1,
      "ArrowFunctionExpressionOpeningBrace": -1,
      "ArrowFunctionExpressionClosingBrace": -1,
      "ArgumentComma" : -1,
      "ArgumentList" : -1,
      "AssignmentOperator" : -1,
      "BinaryExpression": -1,
      "BinaryExpressionOperator" : -1,
      "BlockComment" : -1,
      "BlockStatementClosingBrace" : -1,
      "BlockStatementOpeningBrace" : -1,
      "CallExpression" : -1,
      "CallExpressionOpeningParentheses" : -1,
      "CallExpressionClosingParentheses" : -1,
      "CatchParameterList" : -1,
      "CatchOpeningBrace" : -1,
      "CatchClosingBrace" : -1,
      "CatchKeyword" : -1,
      "ClassOpeningBrace" : -1,
      "ClassClosingBrace" : -1,
      "CommaOperator" : -1,
      "ConditionalExpressionConsequent" : -1,
      "ConditionalExpressionTest" : -1,
      "DoWhileStatementOpeningBrace" : -1,
      "DoWhileStatementClosingBrace" : -1,
      "DoWhileStatementBody" : -1,
      "EmptyStatement" : -1,
      "ExpressionOpeningParentheses" : 0,
      "FinallyKeyword" : -1,
      "FinallyOpeningBrace" : -1,
      "FinallyClosingBrace" : -1,
      "ForInStatement" : -1,
      "ForInStatementExpressionOpening" : -1,
      "ForInStatementExpressionClosing" : 1,
      "ForInStatementOpeningBrace" : -1,
      "ForInStatementClosingBrace" : -1,
      "ForOfStatement" : -1,
      "ForOfStatementExpressionOpening" : -1,
      "ForOfStatementExpressionClosing" : 1,
      "ForOfStatementOpeningBrace" : -1,
      "ForOfStatementClosingBrace" : -1,
      "ForStatement" : -1,
      "ForStatementExpressionOpening" : -1,
      "ForStatementExpressionClosing" : 1,
      "ForStatementClosingBrace" : -1,
      "ForStatementOpeningBrace" : -1,
      "ForStatementSemicolon" : -1,
      "FunctionReservedWord": -1,
      "FunctionName" : -1,
      "FunctionExpressionOpeningBrace" : -1,
      "FunctionExpressionClosingBrace" : -1,
      "FunctionDeclarationOpeningBrace" : -1,
      "FunctionDeclarationClosingBrace" : -1,
      "IIFEOpeningParentheses" : -1,
      "IfStatementConditionalOpening" : -1,
      "IfStatementConditionalClosing" : 1,
      "IfStatementOpeningBrace" : -1,
      "IfStatementClosingBrace" : -1,
      "ModuleSpecifierOpeningBrace": -1,
      "ElseStatementOpeningBrace" : -1,
      "ElseStatementClosingBrace" : -1,
      "ElseIfStatementOpeningBrace" : -1,
      "ElseIfStatementClosingBrace" : -1,
      "MemberExpressionClosing": -1,
      "MemberExpressionOpening": -1,
      "MemberExpressionPeriod": -1,
      "MethodDefinitionName": 0,
      "LogicalExpressionOperator" : -1,
      "ObjectExpressionOpeningBrace": 1,
      "ObjectExpressionClosingBrace": -1,
      "ObjectPatternOpeningBrace": 1,
      "ObjectPatternClosingBrace": -1,
      "ObjectPatternComma": -1,
      "PropertyName" : -1,
      "PropertyValue" : -1,
      "ParameterComma" : -1,
      "ParameterList" : -1,
      "SwitchDiscriminantOpening" : -1,
      "SwitchDiscriminantClosing" : -1,
      "ThrowKeyword": -1,
      "TryKeyword": -1,
      "TryOpeningBrace" : -1,
      "TryClosingBrace" : -1,
      "UnaryExpressionOperator": -1,
      "UpdateExpressionOperator": -1,
      "VariableName" : -1,
      "VariableValue" : -1,
      "VariableDeclarationSemiColon" : -1,
      "WhileStatementConditionalOpening" : -1,
      "WhileStatementConditionalClosing" : -1,
      "WhileStatementOpeningBrace" : -1,
      "WhileStatementClosingBrace" : -1
    }
  }
}
